{"rules":[
  {
    "keys"   :["what","describe","search","where"],
    "phrases":[
      {"type":"regex", "expression":"where is (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"what is (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"describe (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"please describe (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"please explain (?:(?:a )*)(.*)"}
    ],
    "process":[ {"type":"console", "expression":"SELECT place[0] AS place, population, location[0] AS lon, location[1] AS lat FROM locations WHERE location='$1$';"}],
    "actions":[ {"type":"answer", "select":"random", "phrases":[
      "$place$ is a place with a population of $population$. Here is a map: https://www.openstreetmap.org/#map=13/$lat$/$lon$"
    ]}]
  }, {
    "score"  :1,
    "phrases":[
      {"type":"regex", "expression":"what is (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"describe (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"please describe (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"explain (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"please explain (?:(?:a )*)(.*)"},
      {"type":"pattern", "expression":"what does * mean"},
      {"type":"regex", "expression":"how is (?:(?:a )*)(.*)"}
    ],
    "process":[ {"type":"console", "expression":"SELECT description FROM wikidata-en WHERE query='$1$';"},
                {"type":"flow", "expression":"REJECT '$description$' MATCHING 'Wikipedia disambiguation page' PATTERN"} ],
    "actions":[ {"type":"answer", "select":"random", "phrases":[
      "$1$ is a $description$."
    ]}]
  }, {
    "score"  :0,
    "phrases":[
      {"type":"regex", "expression":"search urbandictionary for (?:(?:a )*)(.*)"},
      {"type":"regex", "expression":"ask urbandictionary for (?:(?:a )*)(.*)"}
    ],
    "process":[ {"type":"console", "expression":"SELECT definition,example FROM urbandictionary WHERE query='$1$';"}],
    "actions":[ {"type":"answer", "select":"random", "phrases":[
      "$1$ is a $definition$"
    ]}]
  }, {
    "score"  :0,
    "phrases":[
      {"type":"regex", "expression":"how is (?:(?:a )*)(.*)"}
    ],
    "process":[ {"type":"console", "expression":"SELECT description FROM wikidata-en WHERE query='$1$';"},
                {"type":"flow", "expression":"REJECT '$description$' MATCHING 'Wikipedia disambiguation page' PATTERN"} ],
    "actions":[  {"type":"answer", "select":"random", "phrases":[
      "$1$ is a $description$."
    ]}]
  }, {
   "phrases":[
     {"type":"regex", "expression":"where is (?:(?:a )*)(.*)"},
     {"type":"regex", "expression":"what is (?:(?:a )*)(.*)"},
     {"type":"regex", "expression":"describe (?:(?:a )*)(.*)"},
     {"type":"regex", "expression":"please describe (?:(?:a )*)(.*)"},
     {"type":"regex", "expression":"please explain (?:(?:a )*)(.*)"} ],
   "process":[ {"type":"console", "expression":"SELECT place[0] AS place, population, location[0] AS lon, location[1] AS lat FROM locations WHERE query='$1$';"}],
   "actions":[ {"type":"answer", "select":"random", "phrases":[
    "$place$ is a place with a population of $population$. Here is a map: https://www.openstreetmap.org/#map=13/$lat$/$lon$"
   ]}]
  }, {
   "phrases":[ {"type":"regex", "expression":".+ (?:.+ )+(.+)"} ],
   "process":[ {"type":"console", "expression":"SELECT text,retweet_count,favourites_count FROM messages WHERE query='you $1$ /pure' ORDER BY FAVOURITES_COUNT;"}],
   "actions":[ {"type":"answer", "select":"random", "phrases":[
    "$text$"
   ]}]
 },{
    "phrases":[
      {"type":"regex", "expression":"compute (\\(?\\d[\\(\\)\\d\\+\\-\\/\\*\\.]*\\d\\)?)"},
      {"type":"regex", "expression":"what is (\\(?\\d[\\(\\)\\d\\+\\-\\/\\*\\.]*\\d\\)?)"},
      {"type":"regex", "expression":"calculate (\\(?\\d[\\(\\)\\d\\+\\-\\/\\*\\.]*\\d\\)?)"},
      {"type":"regex", "expression":"(\\(?\\d[\\(\\)\\d\\+\\-\\/\\*\\.]*\\d\\)?)"}
    ],
    "process":[ {"type":"javascript", "expression":"$1$"} ],
    "actions":[ {"type":"answer", "select":"random", "phrases":[
      "$1$ = $javascript$"
    ]}]
  },{
    "phrases":[
      {"type":"pattern", "expression":"what time is it"},
      {"type":"pattern", "expression":"what time"},
      {"type":"pattern", "expression":"time"},
      {"type":"pattern", "expression":"daytime"},
      {"type":"pattern", "expression":"have you got the time"},
      {"type":"pattern", "expression":"have you got the time please"},
      {"type":"pattern", "expression":"do you have the time"},
      {"type":"pattern", "expression":"do you have the time please"}
    ],
    "process":[ {"type":"javascript", "expression":"new Date().getMinutes() + ' minutes past ' + (Math.round(new Date().getHours() + (new Date().getTimezoneOffset() - $timezoneOffset$)/60))"} ],
    "actions":[ {"type":"answer", "select":"random", "phrases":[
      "it is $javascript$"
    ]}]
  }
]}